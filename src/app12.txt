import React from 'react';
import './App.css';

function App1() {

    const [todos, setTodos] = React.useState([
        { id: 1, text: "Wash dishes", done: false },
        { id: 2, text: "Do laundry", done: false },
        { id: 3, text: "Take shower", done: false }
      ]);

  return (
    <div className="container text-center bg-primary text-dark">
    <h1> To-do List. from App2</h1>
        <ul>
      	    <TodoList todos = {todos}></TodoList>
            <AddTodo setTodos={setTodos}></AddTodo>
        </ul>

    </div>
  );
}

function TodoList({ todos, setTodos }) {
    function handleToggleTodo(todo) {
        // confused by this code? Here's what it says:
      
        // if a todo's id is equal to the one we clicked on,
        // just update that todo's done value to its opposite,
        // otherwise, do nothing (return it)
        
    const updatedTodos = todos.map((t) =>
    t.id === todo.id
      ? {
          ...t,
          done: !t.done
        }
      : t
    );
    setTodos(updatedTodos)
    }

    if (!todos.length) { return <p>No todos left!</p>;}

    return (
      <ul>
        {todos.map((todo) => (
            <li onDoubleClick={() => handleToggleTodo(todo)} 
                style = {{textDecoration: todo.done ? "line-through" : ""}}
                key={todo.id}>{todo.text}<DeleteTodo todo = {todo} setTodos = {setTodos}></DeleteTodo>
            </li>))}
      </ul>
    );
  }

function DeleteTodo({ todo, setTodos }) {
    function handleDeleteTodo() {
      const confirmed = window.confirm("Do you want to delete this?");
      if (confirmed) {
        // take care of deleting the todo
        setTodos((prevTodos) => {
            return prevTodos.filter((t) => t.id !== todo.id);
          });
      }
    }
    return (
        <span onClick={handleDeleteTodo} role="button"
          style={{ color: "red", fontWeight: "bold", marginLeft: 10, cursor: "pointer" }} > x
        </span>
      );
    }



function AddTodo({setTodos}) {
    const inputRef = React.useRef();

    function handleAddTodo(event) {
        event.preventDefault();
        const text = event.target.elements.addTodo.value;
        const todo = {
            id: 4,
            text,
            done: false
        };
        setTodos((prevTodos)=>{return prevTodos.concat(todo)});      
        inputRef.current.value = "";
    }

    return (
        <form onSubmit={handleAddTodo}>
            <input name="addTodo" placeholder="Add todo" ref = {inputRef}/>
            <button type="submit">Submit</button>
        </form>
    );
}

export default App1;
